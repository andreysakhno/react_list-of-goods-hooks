{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","DEFAULT","sortBy","setSortBy","isReverse","setIsReverse","goods","preperedGoods","sort","goodA","goodB","ALPHABETICALLY","localeCompare","BY_LENGTH","length","reverse","getPreperedGoods","handleSort","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,sBAAAA,E,YAAAA,M,KAWL,IA4BaE,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,SAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAEMC,EAhCiB,SACvBA,EADuB,GAGnB,IADFJ,EACC,EADDA,OAAQE,EACP,EADOA,UAEJG,EAAa,YAAOD,GAqB1B,OAnBIJ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EAASc,eACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,UACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,GACFG,EAAcQ,UAGTR,EAOOS,CAAiBlB,EAAiB,CAAEI,SAAQE,cAEpDa,EAAa,SAACT,GAAD,OAAmB,kBAAML,EAAUK,KAStD,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYlB,IAAWL,EAASc,iBAElCU,QAASJ,EAAWpB,EAASc,gBAL/B,iCAUA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYlB,IAAWL,EAASgB,YAElCQ,QAASJ,EAAWpB,EAASgB,WAL/B,4BAUA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAahB,IAEfiB,QAnCc,kBAAMhB,GAAcD,IA8BpC,sBASEF,GAAUE,IAER,wBACEe,KAAK,SACLD,UAAU,4BACVG,QA1CE,WACZlB,EAAUN,EAASI,SACnBI,GAAa,IAqCL,sBAUN,6BACGC,EAAMgB,KAAI,SAACC,GAAD,OACT,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCrHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf4e98dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABETICALLY = 'Alphabetically',\n  BY_LENGTH = 'By length',\n  DEFAULT = '',\n}\n\ninterface ISortParams {\n  sortBy: SortType,\n  isReverse: boolean,\n}\n\nconst getPreperedGoods = (\n  goods: string[],\n  { sortBy, isReverse }: ISortParams,\n) => {\n  const preperedGoods = [...goods];\n\n  if (sortBy) {\n    preperedGoods.sort((goodA, goodB) => {\n      switch (sortBy) {\n        case SortType.ALPHABETICALLY:\n          return goodA.localeCompare(goodB);\n\n        case SortType.BY_LENGTH:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    preperedGoods.reverse();\n  }\n\n  return preperedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.DEFAULT);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const goods = getPreperedGoods(goodsFromServer, { sortBy, isReverse });\n\n  const handleSort = (sort:SortType) => () => setSortBy(sort);\n\n  const handleReverse = () => setIsReverse(!isReverse);\n\n  const reset = () => {\n    setSortBy(SortType.DEFAULT);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SortType.ALPHABETICALLY,\n          })}\n          onClick={handleSort(SortType.ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SortType.BY_LENGTH,\n          })}\n          onClick={handleSort(SortType.BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReverse,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n        {(sortBy || isReverse)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={reset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}